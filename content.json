{"meta":{"title":"肥胖的猪","subtitle":"趁着年轻带着好奇揣着梦想出发","description":"趁着年轻带着好奇揣着梦想出发","author":"yzLee","url":"http://yoursite.com"},"pages":[{"title":"分类","date":"2017-11-18T12:43:53.000Z","updated":"2017-11-18T12:45:07.553Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-11-18T12:35:43.000Z","updated":"2017-11-20T05:36:05.669Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"关于我","date":"2017-11-18T12:35:43.000Z","updated":"2017-11-20T13:40:17.416Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"我是谁我叫李玉赞，现居广州。一个纠结的矛盾体，有着暴脾气却又温柔的男生。有着生意梦想，却误打误撞的做了java,喜欢通过看纸质书来巩固基础和学习技术，合上书的那一瞬却又忘的差不多。 关于技术技术的发展日新月异，我深知现在所学所接触只是开拓自己的视野，提升对技术的领悟，能让以后自己技术选型的时候有整体的把握，也有不同的思路。所以对待技术就应该一直保持热情，才能与时俱进。如果时间允许，那就在所接触的技术之外去理解新的其他技术。如果时间不允许，只要专精于自己所接触的技术也就够了，做到”一通而万通”。 关于业务业务虽然随着社会的进步，市场的发展会有不同的新业务涌现。但业务能力始终都是深耕于一个行业经验的结晶。一个没有业务支撑的产品是没有市场的，一个没有业务能力的程序员写产品就如同闭门造车。所以，如果你同我一样，职业规划里自己以后的方向做出来的产品脱离不了客户，市场。那么尽量少跳槽，只要你抱着学习的心态，你就永远能学到新的东西。 希望成为谁我也不知道成为谁，那么，大概就是希望成为一个技术与业务并重，能够实现生意梦想的我吧。说人话，就是希望自己创业当老板。 兴趣 美剧：《行尸走肉》 小说：《诛仙》、《仙逆》、《盗墓笔记》、《鬼吹灯》… 音乐：五音不全的我纯粹就是爱听~ 运动：乒乓球、羽毛球、跑步座右铭趁着年轻带着好奇揣着梦想出发（不是名人名言。haha）联系我 QQ：1072432511 WX：li1072432511 Email：yzlee06@vip.qq.com声明本站点属于非营利性个人博客网站，不含任何营利性信息。网站内容除特殊声明摘取自网络，其余均为原创，欢迎转载，转载请注明出处。如若侵犯到您的权益，请及时联系我删除。"}],"posts":[{"title":"面试那些事儿","slug":"hello-world","date":"2017-11-20T07:15:55.281Z","updated":"2017-11-23T16:05:14.231Z","comments":false,"path":"2017/11/20/hello-world/","link":"","permalink":"http://yoursite.com/2017/11/20/hello-world/","excerpt":"我的面试坎坷路","text":"我的面试坎坷路 写在前面的话开头也没什么好写的，就直白的交代下为什么要写这篇随笔吧。本人读书时代就可以用几个字来形容，毫无上进心。高中的时候虽然身在全校最好的班级，但自己却是想着反正能上二本就OK的混子，或者说是心态好到爆炸的毒瘤。到了大学就更甚之，于是不仅成为同学眼里一只平平庸庸的咸鱼，就是连我自己恐怕也是这么觉得的，因为很清楚的发觉了自己慢慢变得不自信，不敢有梦了。很幸运的是，在后来工作中平易近人、教我做人做事的鑫哥，积极向上、认真负责的同事 让我受益良多。慢慢的，公司对我学习能力以及认真负责的工作态度给与的肯定让我又重新找到了被人看的起的感觉(真TM爽，haha)。工作一年多后的某一天跟大学同学聊天：”xxx,我觉得你进步真的挺大的”。其实看到这话的时候内心既是心酸的(原来我以前是那么的咸鱼)，也是欣慰的(这一年的付出让我在毕业后并没有输，甚至得到的都是肯定)。不可否认的是工作对我的影响很大，但我还是想自恋的说声：其实只是唤醒了骨子里本该是这样的我（哈哈哈，这么自恋会不会被打，但确实有句话叫狗改不了吃屎，放在这里虽然有点不应景，额）。很遗憾的是，后来我还是辞职了，毕竟每个人都有自己的生活与无奈，我也趁着自己还年轻不想生活如一潭死水吧，心里还是有个大城市梦。于是就有了面试这些事，为什么要写下来？因为我觉得这期间的心路历程比较丰富，人参轨迹也因此变化。值得以后结合那时的处境再来回味一下，或许又别有一番滋味。 PART Ⅰ(打击)不要为自己的无知找借口国庆之后，毫无面试准备的来到广州，这个时候是超级盲目自信的，于是先开开心心的玩上一个星期再说(以至于后来情绪低落的时候无时无刻不再后悔怎么就浪费了这一个星期)。接下来就是第一家面试了，先是笔试，这个时候我就充分的展示了我的自信，笔试题上其实别人问的都是基础的东西，但是我准备不充分，工作中没用到，有些东西确实不会。于是我就会写上我工作中没用到过啥啥啥的(其实翻译一下就是我没用到过咋滴，这能看出我工作能力吗？你必须原谅我)，好吧，两个面试官看了我的笔试题之后就真的原谅了我，接下来就是面试，面试过程还是比较轻松的，大概就是问了一些具体的实现细节，业务流程，分布式以及bug跟踪处理等。但我应该说的多的或者表达的意思还是我没接触过，所以我不会，并且一副自我感觉良好的样子。面试结果自然是GG了。 这时候我就有些意识到了我的问题，我有工作经验是真的，我没接触过是真的，我不会也是真的。但我好像总是在像别人阐述我工作中没接触过所以我不会，这样子来看就像是借口，别人自然也就不敢用你了。 你可能并不值钱这次面试我并没有投简历，是HR主动联系我的。在电话里夸赞了我一番(啥年纪轻轻就会这么多技术等等)，并善意的主动加QQ怕我找不到路。因为是公司主动找上门，也算是一种肯定，我觉得我真的是属于那种你相信我我就不会辜负你的人，在我而言，你信我那对我来说便是一份责任。所以我是带着不肯让这公司失望的压力去面试的(说白了，还不是怕自己出糗~~)。经过上次的总结，这次我学乖了，不会就是不会，而不是一副自我良好的样子说工作中没遇到过所以不会，但也变得谨小慎微起来，有些东西说起来也吞吞吐吐。但是面试官人很好，一直对我保持这善意的微笑，于是我也还以微笑，但在有些问题上我回答的不好，后来面试官就说:”你这个问题答错了，再想想，我去叫别人来面试你”。我心里就美滋滋的：”嗨呀，错了还让过，美滋滋”。然后就进来另外一个面试官，这个面试官跟之前那个截然相反，不苟言笑的样子，但我一眼就出来了，这个面试官人也很好。面试过程中，我一些原理性的东西没回答上，而且他们也根本不用框架。然后就说：”其实我们看中的是你的学习能力，你简历上这些我们很大一部分都没用到，面试过程中也发现你这人特别实诚，值得培养…你们之前公司肯为你大幅提工资，几次挽留你并不是因为你值钱，而是他们缺合适的人”。然后就给我开了个很低的薪资。这次对我的打击特别大，因为在我心里觉得是别人主动找我的，两个面试官人看起来也非常的好。让我觉得他们给我开的薪资无非就是认为我诚实好学而已，但是并不能胜任他们的工作，需要重新培养。这真的让我情绪低落到了极点，也让我认识到：也许你在之前的公司啥都能做，但这并不意味着你啥都会了，你只是恰好会做了你们公司需要的。纵然你会很多，你百般武艺，但是跳槽也仍然是件危险的事，因为很多公司不需要你什么都会，所以你会的那些在面试的时候就并不值钱，就很容像我一样被打破心理防线，心态爆炸。 不要冲动之后再后悔“我一定要进这公司，什么都符合我的要求，还离家这么近，上班走路十来分钟就可以”。当我看着邮箱里面试邀请书以及后面的简介时兴奋的的斩钉截铁的说道，也像是给自己打气一般。然后又小心翼翼地看着对方的招聘要求。第二天面试的时候，由于我因为别的面试的原因，迟到了十来分钟，又因为我别的面试发挥的不好，这时候我都心灰意冷不想去面试了，对我来说如果再发挥的不好，就意味着这周又过去了，而且少了一家这么近公司的面试机会。于是我就在公司楼下打人事电话：“您好，我是昨天受邀面试的，但是今天迟到了，请问还能来贵公司面试吗？”，电话那端传来：“没事的，来面试吧”。然后我就鼓起勇气上去了，到了公司门口我就听到了人事的笑声：“来面试还要问能不能…”。然后我就装作没听到的说：“您好，我是来面试的”。这家没有笔试，直接就是总监面我，问了我tocmat服务器，jquery,sql优化，mysql的一些问题。我都答上来了。他就出去了说换个人来，结果进来一个说话我还小声的小伙子，他跟我讨论了hibernate,订单的流程，表结构设计方面等等。重点来了，小伙走后没多久之前面试我的那位大佬又进来了，然后就是笑嘻嘻的问我：“觉得自己面试的怎么样”。然后我就说：“应该还好，一般般吧”。“嗯，很好，程序员就是应该对自己自信”。“那我们来说正事，你这个期望薪资还能不能低”。我一听这话，心里瞬间炸锅了：“这是打算要我了啊，但是觉得我工资开的高，如果我说不能低，肯定就会因为工资不要我了”，于是我就鬼使神差的说可以，然后说出了自己最低限制。后来就是各种套路我了，说什么其实我这工资超过他们公司对于工作经验的所定工资的标准了…后来就提到工作内容跟工作日的事，于是我又把工资给抬回来了。再后来就一个劲的笑着问我还有什么要问的，可是我真的，就完全在自己的喜悦中给冲昏了头脑，也觉得自己在招聘网站上了解的清楚了，就没有问什么了。现在想想，感觉真的是笑的老奸巨猾呀。后来接收到入职邮件，“what,自己带电脑?不交公积金?招聘网站上不是写的五险一金吗？”。我就这样带着不爽跟纠结去入职了，到了公司填完合同(还没盖章)后，我就问一起入职的同事，说你面试的时候知道自带电脑跟公积金的事，然后他说：“自带电脑不知道啊，也是收到邮件才知道的，公积金的事我问了才知道的，还给我加了点薪资”。后来的事，就是我又找了那个面试的老大聊了，一上去我也不是解决问题的语气：“我觉得你们招人的时候不够坦诚，有些东西跟别的公司不一样的为什么不提出来而是一直问我还有什么要问的，有些东西跟招聘网站上的不符，为什么也不主动提出来。我知道你们发布一个招聘信息，会有很多人来投简历，但是想找到一个合适的人恐怕也不容易”。自然我就被教育了一番：“我发现你这人特别容易纠结，你自己有发现吗？面试的时候跟你提工作内容跟每个月只休6天的时候就在纠结。现在这明明就是你自己没问到，是你的错误却把责任推卸给别人，你觉得公司不坦诚那是你看不到公司为你们做的付出，推掉了好几个候选人，你虽然还年轻，接触也广，技术不错。但是也23了。跨入社会也一年多了…”。听到后面我觉得他语气有好转，于是我也就：“没主动问确实是我的失误，但是跟别人不同的还是应该由你们说出来的。至于纠结，确实有一点，但是一份工作毕竟关系到我的职业规划以及生活，我只是对自己负责而已。我之所以选择在今天跟你把这个说出来，其实就是不想带着情绪我的工作。那么别的员工也是没有公积金的，公司是有什么计划还是说通过给别的福利或者补贴的”。他就说：“公司计划这个也不是我决定的，我也不好告诉你什么时候就会交公积金，到时候没实现你又来说我不坦诚。至于别的福利或者补贴，我们是没有的。公积金是所有人都没有的。要不这样，如果这真的影响你的职业规划，那你先回去考虑一天，考虑好了明天来入职就可以了”，可是我立马就下想到刚入职那位同学对我说的，就冲动了。先是觉得不坦诚，然后现在又对我隐瞒，这样的环境以后也肯定不是个公平的环境(其实就没有公平，但是我觉得不能让我这样赤裸裸的看到)。再后来，我就后悔了，毕竟离家近，薪资也达到了我的期望值。以至于后来我去拿离职证明的时候还妥协说要不算了，我还是正常入职把。但是机会却这样就没了，因为你永远不知道公司为了录用你拒绝了多少人，又会有多少在等着这个机会。因为他们已经通知候选人入职了。其实整件事下来，我发现我应该就错在后来的妥协与后悔，这真是一种很不相信自己的做法。 PART Ⅱ(重拾自信)面试渐渐变得没那么痛苦经历过上周那样的喜悦与后悔，挣扎与纠结。我也就看开了，于是面试慢慢的我也就放开了心态。有好几次面试都谈了快一个小时之久，甚至还有一次机试加笔试花了我快4个小时。他问的问题比较偏，我基本有一半都答不上来。面试结束的时候我就问了他：“我说我能冒昧的问你一下，你多大吗？因为我觉得你很厉害”,然后他就说：“我毕业四年了。但是比你大七岁”。我就说：“哦，看起来好年轻啊，真的是比我厉害多了，我觉得我三年之后达不到你这样的水平。你问的问题我都没怎么答上来，答上来的也不自信。”。结果他说：“答不上来也正常，这些都是我平时的积累，你要是遇到了你也就会了，不用太在意，我还很欣赏你的。但是我做不了主，你先坐一下，我去请示一下我们领导”。于是我就开心的坐下来，心想有戏啊，4个小时没白费啊。结果后来那我小哥一脸歉意的进来：“我是真的觉得你不错的，所以才向领导推荐你的，但是领导不知道出于什么考虑，决定还是不聘用你”。听到这话的时候其实我失望还是肯定的，虽然小哥人不错，但是这是啥领导啊，所以我4个小时连能说话的领导都没见到就被拒绝了，心里MMP，但嘴上还是优雅又不失素质的说了句：“没关系,拜拜”。还有一家就是一家大型国企旗下的直属公司，整整几页的笔试题，还有一半是英语。我真是也能耐着性子做完了，然后就是行政对着答案看完我笔试结果，然后从楼上找了经理给我面试；面试的时候经理还是算很好说话的把。令我震撼的是，因为我简历上写了mongoDB。然后那经理就问，为什么要问mongoDB。他跟mysql有什么区别。于是我就说了下我在之前公司mongoDB用来做了什么，再说了下从网上背下来的区别。结果那经理说：“其实mongoDB是….因为我们打算项目用到mongodb。准备花个几百万来搭建。请了mongodb的几个大支持商来给我们做过演讲。其实mongoDB对小公司小项目来说意义不大的…”。再后来又谈了些别的技术跟项目的事。然后就看了下我的求职个人信息：“说94的，毕业一年了”。我说：“嗯”。他说：“嗯，还不错，挺年轻的，接触的也广”。我说：“年轻吗？都毕业一年多了。技术虽然接触的广但是深度一点都不够…”。结果他说：“你这毕业一年算什么啊。你应该说才毕业一年，很多在校学生都比你们这些毕业一两年的厉害。主要看项目….但是我们其实对你们这样的是看值不值得培养，不怎么看技术的。要是工作个四五年了，那我们就要看技术了。”我真是被说的服气，没啥好说的了。后来他又跟我讲了下他们的项目以及一些他们的业务。再后来就叫我回去等通知：“说你这个期望薪资我们是达不到的，我们有自己严格的体系，并且加工资也比较困难。你回去等通知啊。人事两个星期内会给到通知的”。嗯，很明显，没戏，毕竟在人家眼里在校生都比我们这种渣渣厉害。 又拿offer之后的感觉这次同样是离住的地方很近，甚至更近，很巧的是，在面试的前一晚上：“我也说出了我要进这家公司，不为别的，就因为实在是近，而且做医药行业做了这么多年。”第二天来到公司面试，就更加想进这家公司了，公司所在园区很不错，公司环境看起来也可以。先是笔试。然后等待了一会就是面试。面试是个帅小伙面试，看起来真年轻。但是当他说他在这工作8年了。我：“…”。面试过程也还好，问了一些问题，甚至有个问题我答的并不好，因为以前确实接触不到。然后主要问的自己对以后职业规划。可能是我笔试做的不错把。然后也就顺利的通过了。感觉的话还是比较开心的，毕竟我又说出了想进这家公司，然后就真的拿到offer了。但是如果真要我说感觉，我觉得我就算没有拿到offer。我也不会有很大的失落了。这一路走来，真的是自信到失落到怀疑，到状态又慢慢变好。我觉得我心态好很多了，就算这家没肯定我，我觉得我找到合适的工作也是用不了多久了。 不要被眼前利益迷惑这家是拿到offer之后的面试，因为我虽然已经答应入职了，但是既然已经在之前就约了这家，还是去看看吧，就当是去见见世面。于是我就到了珠江新城。结果还真的是见大世面啊。出了地铁口之后这里的高楼大厦才真正让我认识到，果然是大城市。慢慢的就对接下来的面试有了压力。这家公司是金融公司，根本没搞互联网这块。面试官也跟我坦白的说了一下他们现在遇到的需求，以及自己是做安卓app的。现在需要一个人来承担他们遇到这个需求的开发。整个技术选型跟后期拓展维护都由这个人来完成，如果后面有需要招人，也是听我调度。我听到这些的时候就问了自己，他们这个需求对我难吗？我现在这么快就做管理层好嘛？昨晚这个项目之后除了维护我还有别的事做吗？于是我很快就得出了答案：“就一个积分商城一个订单流程，技术选型什么的沿用我以前公司的结构，对我来说真的不难。。但是我现在的眼界真是短浅的很，怎么做系统的架构，怎么做管理者？这样对我以后的发展肯定事障碍。”，然后又去求证了我昨晚之后就是维护。虽然工资开得很高，而且我认为我完成任务对我来说挑战不大。但我还是当场就说出了拒绝。我觉得我现在需要的积累跟沉淀，真是一点毛病都没有。但是我倒是得出个结论，我这不也是为了答应入职的那家公司而拒绝了这家，但这也算我为拿到offer那家公司的付出？其实并不是，只是在我的衡量中，这家金融公司只是工资开的高，别的呢，发展呢，都是一片空白。所以我才会选择之前那家，就因为那家对我诱惑更大。所以我最开始那家也是一样，我觉得他们并不坦诚的时候他们竟然说我不知道他们的付出，我当时还信以为真，现在看来呢，什么付出。他之所以是候选者不就是因为他没我优秀吗?不就是因为在你眼里没我这么好用没这么值钱吗?你们想招到更适合公司发展的人所以拒绝了他们，这能算是为我做的付出？真的好像说不通哦。 PART Ⅲ(波澜)意料之外的肯定….这真是意料之外的事情，我都工作半个月了。结果之前那家大型国企旗下的公司给我发来面试反馈，说我面试通过，叫我确认然后回复邮件，他们会走接下来的审批流程。当我看到这邮件的时候真的是不知道是该开心还是该伤心。或者两者都有吧，在我心里还是起了波澜。开心的是，也就是说经过这公司快一个月的面试，本该以为我的简历已经在哪个垃圾桶里了，却没想到经过这这么久，最后从里面选择了我。这大概就是最好的肯定把。说好的在校生都比我们厉害的呢，据我分析应该是看上我的态度跟我的诚实了。毕竟面试这种事情，很多时候看缘分好啦，哈哈。伤心的是，我已经工作了，也就是说我失去了最开始最好的选择的时候的，让我无法静下来思考到底去哪里合适了。有时候，很多东西真的都不是如你想的那么完美的。 结语本来以为自己有写作天赋，写着写着却发现变成了流水账。最近也很忙，真是抽的一点时间。写的乱也是情有可原的。既然这样那我以后不吹嘘自己有写作天赋了。但是我觉得我总结的标题还是不错嘛。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/categories/随笔/"}],"tags":[]},{"title":"mysql索引总结","slug":"mysql索引总结","date":"2017-11-18T13:31:38.000Z","updated":"2017-11-21T08:31:54.832Z","comments":true,"path":"2017/11/18/mysql索引总结/","link":"","permalink":"http://yoursite.com/2017/11/18/mysql索引总结/","excerpt":"mysql索引总结","text":"mysql索引总结 几个你需要思考的问题如果使用了ORM是否还需要关心索引？ORM工具是能够生成符合逻辑的、合法的查询的。但是ORM工具能够生成的也一般只是简单的查询而已(eg：根据表的主键查询)。而如果是关于利用到索引的查询，如果设计到很多的条件与规则以及顺序，ORM工具是很难生成合理利用索引的查询的。所以即使是用了对象关系映射工具，还是需要理解索引。 索引总是最好的解决方案吗？索引并不一定是最好的解决方案，只有当索引需要的额外工作与压力小于其好处时，才应该使用索引。比如：很小的表，可能索引带来的效果根本就不明显或者还没有全表扫描来的更高效。或者很大的表。索引所占的空间以及动态维护的成本都成倍增长，而且定位单条记录的意义根本就不大。这个时候更应该考虑别的技术（比如分区）。 使用索引应该注意什么？理解索引是如何工作的是很重要的。这样就可以根据你的理解来创建出合适的索引。而不是根据一些经验法则”where、group by、order by后的所有列创建索引”。一定要积极的创建一个合适的索引，如果有些地方有取舍，就要先看能不能有替代策略（比如，允余字段，提前计算，转换sql等） 何为索引？索引的定义索引在mysql中也叫做键（”key”）,是数据库的存储引擎用于快速找到记录的一种数据结构 索引的类型注：不同存储引擎的索引工作方式不一样，也不是所有的存储引擎都支撑所有类型的索引。即使不同的存储引擎实现了同一种类型的索引他们的底层实现也可能不一样 B-Tree索引定义：B-Tree意味着所有的值都是按顺序存储的，并且每个叶子页到根的距离相同。存储引擎不需要全表扫描就能获取需要的数据，而是从索引的根节点开始进行搜索，因此能够加快访问数据的速度。假设有个人员表，如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445create table tb_people( family_name varchar(12) not null comment &apos;姓&apos;, name varchar(12) not null &apos;名&apos;, birthdate date not null &apos;生日&apos;, key(family_name,name,birthdate));那么在如下的查询中 索引是有效的：1.全部值都匹配select * from tb_people where family_name = &apos;li&apos; and name = &apos;san&apos; and birthdate = &apos;1994-11-23&apos;; 说明:就是跟所有列都匹配，用于查找姓名为li san、出生于1994-11-23的人2.匹配最左前缀select * from tb_people where family_name = &apos;li&apos;; 说明:就是只使用到了索引的第一列,查找姓为li的人3.匹配列前缀select * from tb_people where family_name like &apos;l%&apos;; 说明:用于查找姓以‘l’开头的人4.匹配范围值select * from tb_people where family_name in (&apos;li&apos;,&apos;wang&apos;) ; 说明:用于查找姓为li,wang的人5.精确匹配某一列并范围匹配另一列select * from tb_people where family_name = &apos;li&apos; and name like &apos;san%&apos; ; 说明:查询所有姓为‘li’并且名为‘三开头的’的人6.只访问索引的查询select family_name,name,birthdate from tb_people; 说明:即所查询的列都是索引中的列那么在如下的查询中 索引是无效的：1.如果不是按照索引的最左列开始查找，则无法使用索引。eg:select * from tb_people where name = &apos;san&apos;; select * from tb_people where name = &apos;san&apos; and birthdate = &apos;1994-11-23&apos;; select * from tb_people where family_name like &apos;%i&apos;; 2.不能跳过索引中的列select * from tb_people where family_name = &apos;li&apos; and birthdate = &apos;1994-11-23&apos;; 说明：如果在where条件中没有指定name而跳过它，则实际上只用到了索引的第一列 3.如果查询中有某个列的范围查询，则该列后面的所有列都将无法使用索引，eg:select * from tb_people where family_name = &apos;li&apos; and name like &apos;san%&apos; and birthdate = &apos;1994-11-23&apos;; 哈希索引定义：哈希索引基于哈希表实现，只有精确匹配索引的所有列索引才有效，对于每一行数据，存储引擎都会对所有的列计算一个哈希码。哈希索引将所有的哈希码存储在索引中，同时在哈希表中保存指向每个数据行的指针。哈希索引的工作原理：假设上表的fimaly_name建立了哈希索引，有如下查询：123456789select * from tb_people where fimaly_name = &apos;li&apos;;那么工作原理就是：mysql先计算‘li’的哈希值，并使用该哈希值去索引结构中寻找对应的记录指针，假设‘li’根据函数生成的哈希值为123，那么mysql就会去索引中找123，然后找到123的指针指向第一行，然后就会判断第一行的值是否为‘li’。&lt;/br&gt;因为哈希码一般都是一个较小的值，而索引自身只需要存储对应的哈希码，而不是存储字段值。所以哈希索引的查找速度是非常快的。但是哈希索引的限制也有很多* 哈希索引因为存储的是哈希码，本身就无顺序可言，所以哈希所以无法用于排序* 因为哈希码是根据字段的全部值来生成的，所以哈希索引也不支持列的部分匹配来查找 eg:select * from tb_people where fimaly_name like &apos;l%&apos;;select * from tb_people where fimaly_name = &apos;li&apos;;说明：假设第一条是在列A上建立的哈希索引，第二条是在列(A,B)上建立的索引;* 哈希索引只支持等值查询，包括=，in(),&lt;=&gt;。而不支持范围查询，比如 where birthdate &gt; &apos;1994-11-23&apos; 其他索引空间索引（R-Tree）、全文索引(一种特殊类型的索引，它不是通过比较索引中的值来查找)、其他索引类别等。 优缺点优点：1.单行访问是很慢的。如果服务器从存储中读取一个数据库只是为了其中一行，那么就浪费了很多工作。使用索引可以创建位置以提升效率2.按顺序访问范围数据是很快的。顺序I/O比随机I/O快很多，如果服务器需要顺序读取数据，那么就不需要额外的排序操作（B-Tree）。3.如果一个索引包含了查询所需要的所有列，那么存储引擎就不会再回数据表里查找，极大提升查询效率缺点：1.索引总是意味着额外的维护工作与空间2.哈希索引可能会出现哈希冲突，如果索引建立的不合理的话，代价会很大 高性能索引你必须get的几个点索引的选择性索引的选择性是指不重复的索引值和数据表的记录总数（#T）的比值，范围从1/#T到1之间。索引的选择性越高则查询效率越高，因为选择性高的索引可以让MySQL在查找时过滤掉更多的行。唯一索引的选择性是1。对于BOLB、TEXT或者很长的VARCHAR的列，mysql不允许索引这些列的完整长度，所以必须使用前缀索引。前缀索引必须在选择性跟空间成本中做平衡。具体请查看《高性能mysql》 独立的列索引列不能使表达式的一部分，也不能使函数的参数。eg:121.select id from tb_test where id+1=5;2. select * from tb_test where to_days(current_date) -to_days(birthdate) &lt;= 10; 多列索引以及索引列的顺序很多人都受所谓的经验法则“把where提交的列都建上索引”误导，导致对多列索引的理解不够，其实这样在很大程度上不会提高查询能,mysql5.0开始就加了“索引合并”的策略。这种策略是一种优化，但同时也说明了所建的索引基本上没有效果，有时候还有不可控的结果索引列的顺序一般是将选择性高的放在前面 使用索引扫描来做排序MySQL可以使用同一个索引既满足排序，又用于查找行。如果可能，设计索引时尽量满足这两种任务。只有当索引的列顺序和order by子句的顺序完全一致，并且所有列的排序方向都一样时，MySQL才能使用索引来对结果做排序。如果是关联查询，则只有当order by自居引用的字段全部为第一个表时，才能使用索引做排序。 重复索引和未使用的索引这些索引会导致成本变高，又没起到作用，应该发现并删除。可以通过查询information_schema表来查找。 索引的一些小技巧支持多种过滤条件1.在有更多不同值的列上创建索引的选择性会更好。2.有些列比如sex,选择性不高，但是频率特别高，基本上所有查询都要带上它，那创建索引的时候就应该把他放在组合索引的前列。正因为它选择性不高，所以即使有些查询没带上这个条件，我们也依然可以让该查询能用到索引，比如sex in(‘m’,’f’)3.对于多半会有范围查询的列，在组合索引时就应该把该列放在最后面，比如时间，年龄，工资这种列。 避免多个范围条件1.什么是范围条件？从explain的输出我们有时候很难区分出是查询范围值，还是列表值。比如：121.EXPLAIN SELECT actor_id from tb_actor where actor_id &gt; 45;2.EXPLAIN SELECT actor_id from tb_actor where actor_id in (1,45,90); 这两条sql语句explain都会输出type:”range”；但事实上第二个其实就是三个等值条件查询。2.避免的话，如果查询不需要精确数据，我们是有替代策略的。比如新加一个字段值，然后通过定时任务来维护这个字段值。索引中加上这个字段值来替代原本的列。比如超过20天的就不是新会员了，我们需要统计新会员跟老会员，本来是根据成为时间来判断，我们新加一个会员状态的字段值，通过定时任务去维护。如果需要精确的数据，那就只能根据时间放到where子句中，但不加入到索引中。 优化排序场景：如果查询条件中只有个选择性非常低的列。但是数据量又非常大，而且需要翻页。这样的查询会很慢，即使有索引到最后因为limit偏移量的原因也会很慢。因为需要大量的时间去扫描丢弃的数据。方案：比较好的一个方案就是使用延迟关联。通过使用覆盖索引查询返回需要的主键。再根据主键关联原来表获得需要的行。假设有个索引为（sex,salary）。需要按照薪资排序，翻页。sex作为查询条件。eg:1select * from tb_person inner join ( select id from tb_person where x.sex = &apos;m&apos; order by salary limit 100000,15) as x using(id); 参考文献《高性能MySQL》 结语第一次用GitHub跟hexo搭建独立博客。排版什么的也不太会用。能看到这里的你可能也很无聊吧，哈哈","categories":[{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/categories/数据库/"},{"name":"基础知识","slug":"数据库/基础知识","permalink":"http://yoursite.com/categories/数据库/基础知识/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]}]}